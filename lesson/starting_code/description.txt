The goal of this project is to draw some computationally intensive fractal
or pattern, with this computation happening in parallel. We are providing
code that handles all of the graphics, you only need to compute how to
color points.

If you are not familiar with a fractal you wish to use, we recommend the
Mandelbrot set. It has a very simple mathematical definition (ask
Wikipedia). If you decide to draw something else, keep in mind that our
code is intended for shapes that are defined in terms of points on the x-y
plane, not pixels or lines. Other appropriate patterns would be certian
other fractals, or even just simple functions of x and y that look
interesting when plotted. If you decide not to draw the Mandelbrot set,
you will likely need to change the default view area, found in conf.scala.

The GUI we are providing is represented by an actor. When you send points to
this actor, it will draw them on the screen. Your code goes in client.scala
and will be automatically started. You should not need to change anything
else except Conf.scala.

Note that we have provided more functionality in the GUI then you need to
complete the assignment; you can move move the view (arrow keys) and zoom
in/out (I/O keys), and your client could query the gui actor for
information about this in order to draw more points (detalis in
api.txt).However, all that is required for full credit is:
	1. A picture is drawn
	2. Calculation for this picture happens in parallel.

